###############################################################################
# This file contains default values for all DAQ properties.
###############################################################################

# single|double|test
# Please do not change this value directly and use c2mon.daq.jms.mode instead
spring.profiles.active=single

# ActiveMQ url
jms.broker.url=tcp://localhost:61616
# Secondary ActiveMQ url (used to send to e.g. a test server)
jms.broker.url.2=tcp://localhost:61617

# Possible values are:
# single = Default option to connect to a single broker cluster to send data to C2MON server layer
# double = Allows defining a second (passive) broker cluster, which will receive in parallel all updates. Example usage: feed a test C2MON server with operational data 
# test = Allows to run the DAQ with a local configuration file without C2MON server
c2mon.daq.jms.mode=single

# The trunk name for all JMS queues.
# Change this variable, if you want to use the same broker cluster
# for multiple C2MON server instances
c2mon.jms.daq.queue.trunk=c2mon.process

# Broker, which is receiving the filtered tag values in case
# that c2mon.daq.filter.enabled=true
c2mon.jms.statistics.url=${jms.broker.url}
c2mon.jms.statistics.user=not-used
c2mon.jms.statistics.pwd=not-used

# milliseconds DAQ waits for a server response
c2mon.daq.serverRequestTimeout=120000

# If set, the DAQ will load its configuration from the specified file rather
# than from the server.
# c2mon.daq.config.local.file=

# If set, the DAQ will save the remote config from the server to the specified
# file location.
# c2mon.daq.config.remote.file=

# If set to true, the filtered tag values are sent to a queue on the broker, 
# which is specified by "c2mon.jms.statistics.url"
c2mon.daq.filter.enabled=false
# maximum capacity of the filter SynchroBuffer (FIFO thereafter: values added
# after this point will prompt the buffer to remove the oldest values)
c2mon.daq.filter.bufferCapacity=10000

# Configuration settings for the dynamic time deadband
# to filter out oscillating values.
c2mon.daq.deadband.dynamic.enabled=false

# counter dynamic time deadband settings
# low priority
deadband.counter.low.nbIntervals=6
deadband.counter.low.interval=600000
deadband.counter.low.activate=20
deadband.counter.low.deactivate=15
deadband.counter.low.deadband=30000
# medium priority (not used so far)
deadband.counter.medium.nbIntervals=6
deadband.counter.medium.interval=600000
deadband.counter.medium.activate=20
deadband.counter.medium.deactivate=15
deadband.counter.medium.deadband=30000

# Logging
c2mon.daq.logging.useEquipmentLoggers=false
c2mon.daq.logging.useEquipmentAppendersOnly=false
