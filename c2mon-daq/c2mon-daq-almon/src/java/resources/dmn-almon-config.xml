<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c" default-autowire="byName"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- enable spring annotations scanning -->
	<context:component-scan base-package="cern.c2mon.daq.almon" />

	<!-- <context:annotation-config/> -->

	<context:mbean-export registration="ignoreExisting" />

	<bean id="logAlarmSender" class="cern.c2mon.daq.almon.sender.impl.AlmonLoggingSenderImpl" />

	<!-- This is the production profile. Alarm monitor starts and connects to the production database. Production alarms sender 
		and production PLS line resolver are used -->
	<beans profile="PRO">

		<context:property-placeholder location="file:${almon.properties}"
			ignore-resource-not-found="true" ignore-unresolvable="true" />

		<!-- <import resource="classpath:resources/dbinf-prod-config.xml" /> -->

		<bean id="alarmsMonitorSender" class="cern.c2mon.daq.almon.sender.impl.AlmonDiamonSenderImpl">
		</bean>


		<bean id="almonSenderProxy" class="cern.c2mon.daq.almon.sender.impl.AlarmMonitorSenderProxy">
			<property name="alarmSenders">
				<list>
					<ref bean="alarmsMonitorSender" />
					<ref bean="logAlarmSender" />
				</list>
			</property>
		</bean>

		<bean id="plsLineResolver" class="cern.c2mon.daq.almon.plsline.impl.PlsLineResolverImpl" />
	</beans>


	<!-- In this profile alarm monitor starts and connects to the embaded in-memory test database. It uses dummy alarm sender 
		and dummy pls line resolver -->
	<beans profile="TEST">

		<context:property-placeholder location="classpath:resources/test.properties"
			ignore-resource-not-found="true" ignore-unresolvable="true" />

		<bean id="alarmsMonitorSender" class="cern.c2mon.daq.almon.sender.impl.DummyAlmonSenderImpl" />

		<bean id="almonSenderProxy" class="cern.c2mon.daq.almon.sender.impl.AlarmMonitorSenderProxy">
			<property name="alarmSenders">
				<list>
					<ref bean="alarmsMonitorSender" />
					<!-- <ref bean="logAlarmSender"/> -->
				</list>
			</property>
		</bean>

		<bean id="plsLineResolver" class="cern.c2mon.daq.almon.plsline.impl.DummyPlsLineResolver" />
	</beans>

	<!-- In this profile alarm monitor starts and connects to the production database, however does not send any alarms to LASER, 
		just logs them. Dummy PLS line resolver is used -->
	<beans profile="INT1">
		<context:property-placeholder location="classpath:resources/test-ccdb.properties"
			ignore-resource-not-found="true" ignore-unresolvable="true" />

		<bean id="almonSenderProxy" class="cern.c2mon.daq.almon.sender.impl.AlarmMonitorSenderProxy">
			<property name="alarmSenders">
				<list>
					<ref bean="logAlarmSender" />
				</list>
			</property>
		</bean>


		<bean id="plsLineResolver" class="cern.c2mon.daq.almon.plsline.impl.DummyPlsLineResolver" />
	</beans>

	<!-- In this profile alarm monitor starts and connects to the production database, however does not send any alarms to LASER, 
		just logs them. Production PLS line resolver is used -->
	<beans profile="INT2">
		<context:property-placeholder location="file:${almon.properties}"
			ignore-resource-not-found="true" ignore-unresolvable="true" />

		<!-- list of senders to be used by the alarm-monitor sender proxy -->
		<bean id="almonSenderProxy" class="cern.c2mon.daq.almon.sender.impl.AlarmMonitorSenderProxy">
			<property name="alarmSenders">
				<list>
					<ref bean="logAlarmSender" />
				</list>
			</property>
		</bean>

		<bean id="plsLineResolver" class="cern.c2mon.daq.almon.plsline.impl.PlsLineResolverImpl" />
	</beans>

</beans>