<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

<import resource="classpath:resources/daq-no-deadband.xml"/>
<import resource="classpath:resources/daq-core-common.xml"/>
<import resource="classpath:resources/daq-activemq.xml"/>

<bean id="driverKernel" class="cern.tim.driver.common.DriverKernel">
  <property name="primaryRequestSender" ref="primaryRequestSender"/>
  <property name="processMessageReceivers">
    <list>      
      <ref bean="activeMessageReceiver"/>              
    </list>
  </property>
</bean>

<!-- initialize the ProcessRequestSender; can switch here between implementations (No dummy implementation needed if local conf used)-->
<!--<bean id="processRequestSender" class="cern.tim.driver.common.messaging.impl.SonicRequestSender"/>-->
<bean id="primaryRequestSender" class="cern.tim.driver.common.messaging.impl.ActiveRequestSender"/>

<!-- initialize the ProcessMessageReceiver; switch here between implementations (Dummy implementation available) -->
<!--<bean id="processMessageReceiver" class="cern.tim.driver.common.messaging.impl.SonicMessageReceiver"/>-->
<!--<bean id="processMessageReceiver" class="cern.tim.driver.common.messaging.impl.DirectoryMessageReceiver"/>-->
<bean id="activeMessageReceiver" class="cern.tim.driver.common.messaging.impl.ActiveMessageReceiver"/>

<!-- initialize the FilterMessageSender; switch here between implementations (Dummy implementation available) -->
<!--<bean id="filterMessageSender" class="cern.tim.driver.filter.impl.SonicFilterSender"/>-->
<bean id="filterMessageSender" class="cern.tim.driver.filter.impl.DummyFilterSender"/>

<!-- <bean id="filterMessageSender" class="cern.tim.driver.filter.impl.ActiveFilterSender"/> -->

<!-- initialize the JmsSenders; any number of these can be plugged into the ProcessMessageSender below -->
<!--<bean id="sonicJmsSender" class="cern.tim.driver.common.messaging.impl.SonicJmsSender"/>-->
<!-- <bean id="activeJmsSender" class="cern.tim.driver.common.messaging.impl.ActiveJmsSender"/> -->
<bean id="activeJmsSender" class="cern.tim.driver.common.messaging.impl.ActiveJmsSender">
   <property name="name" value="productionSender"/>
</bean>


<!-- use proxyJmsSender in processMessageSender to shield DAQ from this connection -->
<bean id="proxyJmsSender" class="cern.tim.driver.common.messaging.impl.ProxyJmsSender">
  <property name="wrappedSender" ref="activeJmsSender"/>
</bean>

<!-- set the JMS message senders that will be used; both SonicMQ and ActiveMQ beans are initialized
     automatically and can be wired in here -->
<bean id="processMessageSender" class="cern.tim.driver.common.messaging.impl.ProcessMessageSender">
  <property name="jmsSenders">
    <list>
<!--      <ref bean="sonicJmsSender"/>-->
<!--      <ref bean="proxyJmsSender"/>-->
      <ref bean="activeJmsSender"/>
    </list>
  </property>
</bean>

</beans>
