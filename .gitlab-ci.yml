stages:
  - cache

variables:
  #  MAVEN_OPTS: -Djavax.net.ssl.trustStore=${CACERTS}
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn $MAVEN_CLI_OPTS/maven.config` so the same config is used
  # when running from the command line.
  MAVEN_CLI_OPTS:
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dhttps.protocols=TLSv1.2
    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
    --batch-mode --errors --fail-at-end --show-version --settings $CI_PROJECT_DIR/settings.xml
    -Dconfig.vues.npm.git.remote.skip=false
    --threads 2C

# Will be used by other branches
cache:
  key: "base"
  policy: pull-push
  paths:
    - .m2

# Preloads the local repository with cached dependencies
build_cache:
  stage: cache
  script:
    # This variable is being set at the TIM level and can affect our builds
    - export MAVEN_OPTS=""
    # We wish to build cache for master - this branch WILL fall behind
    - git checkout master
    # Nuke existing repo
    - rm -rf .m2 node
    - ./mvnw $MAVEN_CLI_OPTS -Dmaven.wagon.http.ssl.insecure=true package -Dmaven.wagon.http.ssl.allowall=true org.apache.maven.plugins:maven-dependency-plugin:3.1.1:go-offline
    #  Will force frontend related tasks, mainly node install
    - ./mvnw $MAVEN_CLI_OPTS generate-resources