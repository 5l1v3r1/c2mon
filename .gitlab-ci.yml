stages:
  - precompile
  - compile
  - test
  - qa
  - publish
  - deploy

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn $MAVEN_CLI_OPTS/maven.config` so the same config is used
  # when running from the command line.
  MAVEN_CLI_OPTS: "--quiet --threads 4.0C --batch-mode --errors --fail-at-end --show-version"

#  =========================
#  === Stage: Precompile ===
#  =========================

.build_base:
  stage: compile
  dependencies: []
  tags: [c2mon]
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    policy: pull-push
  artifacts:
    when: on_success
    expire_in: 60 minutes
    untracked: true
  except:
    - master
    - tags

build_shared:
  extends: .build_base
  stage: precompile
  script:
    - mvn $MAVEN_CLI_OPTS dependency:go-offline
    - cd c2mon-shared
    - mvn $MAVEN_CLI_OPTS -o test-compile
  artifacts:
    name: "c2mon-shared#$CI_COMMIT_REF_NAME"
    paths:
      - c2mon-shared

#  =========================
#  ===== Stage: Compile ====
#  =========================

build_docs:
  stage: compile
  tags: [docker]
  image: jekyll/builder:3.8.5
  script:
    - cd docs
    - jekyll build --config "_config.yml,_overwrite_url.yml"
  artifacts:
    name: site
    when: on_success
    expire_in: 7 days
    untracked: true
    paths:
      - _site
  only:
    - master

build_server:
  extends: .build_base
  dependencies: [build_shared]
  script:
    - cd c2mon-server
    - mvn $MAVEN_CLI_OPTS -o test-compile
  artifacts:
    name: "c2mon-server#$CI_COMMIT_REF_NAME"
    paths: [c2mon-server]

build_client:
  extends: .build_base
  dependencies: [build_shared]
  script:
    - cd c2mon-client
    - mvn $MAVEN_CLI_OPTS -o test-compile
  artifacts:
    name: "c2mon-client#$CI_COMMIT_REF_NAME"
    paths: [c2mon-client]

build_daq:
  extends: .build_base
  dependencies: [build_shared]
  script:
    - cd c2mon-daq
    - mvn $MAVEN_CLI_OPTS -o test-compile
  artifacts:
    name: "c2mon-daq#$CI_COMMIT_REF_NAME"
    paths: [c2mon-daq]

#  =========================
#  ===== Stage: Test =======
#  =========================

.test_base:
  stage: test
  tags: [c2mon]
  script:
    - mkdir reports
    - cd $TARGET
    - mvn $MAVEN_CLI_OPTS -o test && find -iname 'TEST-*.xml' -exec cp {} ../reports/ \;
  artifacts:
    name: "$CI_JOB_NAME"
    expire_in: 60 minutes
    when: on_success
    untracked: true
    reports:
      junit: reports/*.xml
  except:
    - master
    - tags

test_shared:
  extends: .test_base
  dependencies:
    - build_shared
  variables:
    TARGET: "c2mon-shared"

test_server:
  extends: .test_base
  dependencies:
    - build_shared
    - build_server
  variables:
    TARGET: "c2mon-server"

test_client:
  extends: .test_base
  dependencies:
    - build_shared
    - build_client
  variables:
    TARGET: "c2mon-client"

test_daq:
  extends: .test_base
  dependencies:
    - build_shared
    - build_daq
  variables:
    TARGET: "c2mon-daq"

#  =========================
#  ====== Stage: QA ========
#  =========================

sonar_preview:
  stage: qa
  tags: [c2mon]
  dependencies:
    - build_shared
    - build_server
    - build_client
    - build_daq
  script:
    - mvn $MAVEN_CLI_OPTS sonar:sonar -DskipDocker=true -Dsonar.host.url=${SONAR_URL} -Dsonar.analysis.mode=preview -Dsonar.gitlab.commit_sha=$CI_BUILD_REF -Dsonar.gitlab.ref_name=$CI_BUILD_REF_NAME -Dsonar.gitlab.project_id=$CI_PROJECT_ID -Dsonar.gitlab.max_major_issues_gate=0
  except:
    - master
    - tags

quality_assurance:
  stage: qa
  tags: [c2mon]
  dependencies:
    - build_shared
    - build_server
    - build_client
    - build_daq
  script:
    - mvn $MAVEN_CLI_OPTS package sonar:sonar -Dmaven.test.skip=true -DskipDocker=true -Dsonar.host.url=${SONAR_URL} -Dsonar.dependencyCheck.reportPath=target/dependency-check-report.xml
  only:
    - master

#  =========================
#  ===== Stage: Publish ====
#  =========================

# Fully build and publish master branch
publish:
  stage: publish
  dependencies:
    - build_shared
    - build_server
    - build_client
    - build_daq
  script:
    - mvn $MAVEN_CLI_OPTS -P ci-deploy deploy --settings settings.xml
  only:
    - master

# Publish docker images?

#  =========================
#  ===== Stage: Deploy =====
#  =========================

trigger_build:
  stage: deploy
  tags: [c2mon]
  dependencies: []
  script:
    - "curl -X POST -F token=$TIM_SERVER_TOKEN -F ref=master https://gitlab.cern.ch/api/v4/projects/9859/trigger/pipeline"
  only:
  - master

deploy_docs:
  stage: deploy
  tags: [no-runner-9]
  dependencies:
    - build_docs
  script:
    - echo ${KRB_PASSWORD} | kinit ${KRB_USERNAME}@CERN.CH
    - scp -o 'StrictHostKeyChecking no' -o 'GSSAPITrustDNS yes' -o 'GSSAPIDelegateCredentials yes' -B -r docs/_site/* ${KRB_USERNAME}@lxplus:/afs/cern.ch/user/c/${KRB_USERNAME}/www/c2mon.web.cern.ch/docs
  only:
    - master