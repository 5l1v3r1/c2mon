<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
  
  <!-- for inserting test data -->
  <import resource="classpath:cern.c2mon/server/test/server-test-data.xml"/>
  
  <!-- requires all DB and cache modules for component testing of the configuration module -->  
  <import resource="classpath:cern.c2mon/server/cache/config/server-cache-single-server.xml"/>
  <import resource="classpath:cern.c2mon/server/cache/dbaccess/config/server-cachedbaccess-common.xml"/>   
  <import resource="classpath:cern.c2mon/server/cache/loading/config/server-cacheloading.xml"/>
  <import resource="classpath:cern.c2mon/server/rule/config/server-rule.xml"/>
  
  <!-- mock the communication bean; needs to be before the configloader class -->
  <bean id="processCommunicationManager" class="org.easymock.EasyMock" factory-method="createStrictMock">
    <constructor-arg value="cern.c2mon.server.daqcommunication.out.ProcessCommunicationManager"/>  
  </bean>
  
  <!-- mock daq-in module dependency -->
  <bean id="jmsContainerManager" class="org.easymock.EasyMock" factory-method="createStrictMock">
    <constructor-arg value="cern.c2mon.server.daqcommunication.in.JmsContainerManager"/>  
  </bean>
  
  <bean id="testDataHelper" class="cern.c2mon.server.cache.dbaccess.test.TestDataHelper"/>
  
  <bean id="configurationLoader" class="cern.c2mon.server.configuration.impl.ConfigurationLoaderImpl" autowire="constructor">
    <property name="daqConfigEnabled" value="true"/>
  </bean>
  <bean id="configurationDAO" class="cern.c2mon.server.configuration.mybatis.ConfigurationDAOImpl"/>
    
  <bean id="dataTagConfigHandler" class="cern.c2mon.server.configuration.handler.impl.DataTagConfigHandlerImpl" autowire="constructor"/>
  <bean id="controlTagConfigHandler" class="cern.c2mon.server.configuration.handler.impl.ControlTagConfigHandlerImpl" autowire="constructor"/>
  <bean id="commandTagConfigHandler" class="cern.c2mon.server.configuration.handler.impl.CommandTagConfigHandler"/>
  <bean id="processConfigHandler" class="cern.c2mon.server.configuration.handler.impl.ProcessConfigHandlerImpl" autowire="constructor"/>
  <bean id="alarmConfigHandler" class="cern.c2mon.server.configuration.handler.impl.AlarmConfigHandlerImpl" autowire="constructor"/>
  <bean id="subEquipmentConfigHandler" class="cern.c2mon.server.configuration.handler.impl.SubEquipmentConfigHandlerImpl" autowire="constructor"/>
  <bean id="equipmentConfigHandler" class="cern.c2mon.server.configuration.handler.impl.EquipmentConfigHandlerImpl" autowire="constructor"/>
  <bean id="ruleTagConfigHandler" class="cern.c2mon.server.configuration.handler.impl.RuleTagConfigHandlerImpl" autowire="constructor"/> 
  
  <bean id="tagConfigGateway" class="cern.c2mon.server.configuration.handler.impl.TagConfigGateway" autowire="constructor"/> 
  
  <bean class="cern.c2mon.server.configuration.handler.transacted.DataTagConfigTransactedImpl" autowire="constructor"/>
  <bean class="cern.c2mon.server.configuration.handler.transacted.ControlTagConfigTransactedImpl" autowire="constructor"/>
  <bean class="cern.c2mon.server.configuration.handler.transacted.RuleTagConfigTransactedImpl" autowire="constructor"/>
  <bean class="cern.c2mon.server.configuration.handler.transacted.AlarmConfigTransactedImpl" autowire="constructor"/>
  <bean class="cern.c2mon.server.configuration.handler.transacted.EquipmentConfigTransactedImpl" autowire="constructor"/>
  <bean class="cern.c2mon.server.configuration.handler.transacted.SubEquipmentConfigTransactedImpl" autowire="constructor"/>
  <bean class="cern.c2mon.server.configuration.handler.transacted.ProcessConfigTransactedImpl" autowire="constructor"/>  

</beans>
