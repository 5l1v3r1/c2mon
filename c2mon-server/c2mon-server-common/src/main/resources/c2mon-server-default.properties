###############################################################################
# This file contains the default values for all server properties, separated
# on a per-module basis.
#
# Properties are overridden by pointing to an external properties file via
# the "c2mon.server.properties" JVM parameter, or by specifying individual
# properties as separate JVM parameters.
#
# Server properties should use the following format:
#
#    c2mon.server.[module-name].[propertyName]
#
# All property names must be in lowercase, with the exception of [propertyName]
# which may be in camel case. If multiple properties related to a similar
# function are needed, extra dots may be used before [propertyName] to
# represent this grouping.
###############################################################################
c2mon.domain=c2mon

c2mon.server.name = C2MON-SERVER
c2mon.server.home = /tmp
c2mon.server.testMode = false


###############################################################################
# c2mon-server-cache
###############################################################################

##
# multi:Requires ehcache-ee-2.7.5.jar and terracotta-toolkit-runtime-ee-4.0.5.jar, as well as a running Terracotta instance
#       that has to be specified at C2MON startup with -Dterracotta.config.location="<terracotta-main>:<port>,<terracotta-mirror>:<port>"
# single: Requires ehcache-ee-2.7.5.jar. Supports Ehcache fast cache loading, when c2mon.server.cache.skipPreloading=true
# single-nonpersitent (default): Requires ehcache-core.jar. Does not support Ehcache fast cache loading
#
c2mon.server.cache.mode = single-nonpersistent

##
# If this variable is set to true, the cache will NOT be preloaded from the database.
# This flag is only relevant in "single" mode for fast cache loading from Ehcache persistence file.
#
c2mon.server.cache.skipPreloading = false

# How long (in ms) the buffered cache listener should sleep between pulls
c2mon.server.cache.bufferedListenerPullFrequency=10000

###############################################################################
# c2mon-server-cacheloading
###############################################################################
# number of cache objects loaded in one task (results in one DB query in single
# thread)
c2mon.server.cacheloading.batchSize = 1000
#max number of threads used to load any cache (core size is always set as max)
#for best performance ensure there are as many DB connections available
c2mon.server.cacheloading.maxThreads = 20
#queue size for loader tasks; should be large enough to contain all the batches
#(or get exception at start up)
#i.e. cache.loader.queue.size and cache.loader.batch.size must be set so
#that cache.loader.queue.size > #(cache id range)/cache.loader.batch.size
c2mon.server.cacheloading.queueSize = 1000

###############################################################################
# c2mon-server-cachepersistence
###############################################################################
c2mon.server.cachepersistence.timeoutPerBatch = 30000


###############################################################################
# c2mon-server-cachedbaccess
###############################################################################
c2mon.server.cachedbaccess.jdbc.url=jdbc:hsqldb:mem:cache;sql.syntax_ora=true
c2mon.server.cachedbaccess.jdbc.username=sa
c2mon.server.cachedbaccess.jdbc.password=
c2mon.server.cachedbaccess.jdbc.defaultAutoCommit=false
c2mon.server.cachedbaccess.jdbc.validationQuery=
# always set max connections > 1 for proper exception handling (need to access
# DB info using second connection)
c2mon.server.cachedbaccess.jdbc.initialSize = 5
c2mon.server.cachedbaccess.jdbc.maxActive = 10
# If true, the cache DB will be populated with demo data
c2mon.server.cachedbaccess.insertTestData = false


###############################################################################
# c2mon-server-configuration
###############################################################################
c2mon.server.configuration.jdbc.url=jdbc:hsqldb:mem:config;sql.syntax_ora=true
c2mon.server.configuration.jdbc.username=sa
c2mon.server.configuration.jdbc.password=
c2mon.server.configuration.jdbc.defaultAutoCommit=false
c2mon.server.configuration.jdbc.validationQuery=
c2mon.server.configuration.jdbc.initialSize = 1
c2mon.server.configuration.jdbc.maxActive = 2
c2mon.server.configuration.jdbc.testWhileIdle=true
c2mon.server.configuration.jdbc.timeBetweenEvictionRunsMillis=600000
c2mon.server.configuration.jdbc.numTestsPerEvictionRun=1

c2mon.server.configuration.jms.queue = ${c2mon.domain}.config
c2mon.server.configuration.daqConfigEnabled = true
c2mon.server.configuration.allowRunningProcessRemoval = true


###############################################################################
# c2mon-server-daqcommunication
###############################################################################
c2mon.server.daqcommunication.jms.url=vm:(broker:(tcp://0.0.0.0:61616)?persistent=false)
c2mon.server.daqcommunication.jms.queue.trunk = ${c2mon.domain}.process
c2mon.server.daqcommunication.jms.configurationTimeout = 60000

# JMS properties for tag update messages
c2mon.server.daqcommunication.jms.update.consumers.initial = 1
c2mon.server.daqcommunication.jms.update.consumers.max = 50
# time before all consumers become active (in seconds)
c2mon.server.daqcommunication.jms.update.consumers.warmuptime = 120
# should broker wait for server to finish message processing call (i.e. put in
# cache and notify listeners)
c2mon.server.daqcommunication.jms.update.transacted = true
c2mon.server.daqcommunication.jms.update.idleTaskExecutionLimit = 5
c2mon.server.daqcommunication.jms.update.maxMessagesPerTask = 1
c2mon.server.daqcommunication.jms.update.receiveTimeout = 1000
c2mon.server.daqcommunication.jms.update.numExecutorThreads = 250

# JMS properties for DAQ requests to the server
c2mon.server.daqcommunication.jms.request.transacted = true
c2mon.server.daqcommunication.jms.request.consumers.initial = 1
c2mon.server.daqcommunication.jms.request.consumers.max = 5


###############################################################################
# c2mon-server-supervision
###############################################################################
c2mon.server.supervision.jms.heartbeat.topic = ${c2mon.domain}.client.heartbeat


###############################################################################
# c2mon-server-client
###############################################################################
c2mon.server.client.jms.url=vm:(broker:(tcp://0.0.0.0:61616)?persistent=false)
c2mon.server.client.jms.consumers.initial = 5
c2mon.server.client.jms.consumers.max = 10
# requests from client to server
c2mon.server.client.jms.queue.request = ${c2mon.domain}.client.request
# admin requests from client to server
c2mon.server.client.jms.queue.admin = ${c2mon.domain}.client.admin
# topic on which active alarms are published
c2mon.server.client.jms.topic.alarm = ${c2mon.domain}.client.alarm
# publication of server supervision events
c2mon.server.client.jms.topic.supervision = ${c2mon.domain}.client.supervision
# the topic on which all control tags are published to the client
c2mon.server.client.jms.topic.controltag = ${c2mon.domain}.client.controltag
# the base topic used to publish DataTags and Rules to the client
# The process ID will be appended
c2mon.server.client.jms.topic.tag.trunk = ${c2mon.domain}.client.tag


###############################################################################
# c2mon-server-shorttermlog
#
# When using a JDBC URL of the form hsql://*, the C2MON server will start an
# in-process HSQL database server which will be accessible to other processes.
###############################################################################
c2mon.server.shorttermlog.jdbc.url=jdbc:hsqldb:mem:stl;sql.syntax_ora=true
c2mon.server.shorttermlog.jdbc.username=sa
c2mon.server.shorttermlog.jdbc.password=
c2mon.server.shorttermlog.jdbc.initialSize=1
c2mon.server.shorttermlog.jdbc.maxActive=2

c2mon.server.shorttermlog.fallback.tag = /tmp/tagfallback.txt
c2mon.server.shorttermlog.fallback.alarm = /tmp/alarmfallback.txt
c2mon.server.shorttermlog.fallback.command = /tmp/commandfallback.txt


###############################################################################
# c2mon-server-rule
###############################################################################
# number of rule evaluation threads to be used
c2mon.server.rule.numEvaluationThreads = 1


###############################################################################
# c2mon-server-laser
###############################################################################
# number of threads the LASER backup should access the cache with
c2mon.server.laser.numBackupThreads = 10
#
c2mon.server.laser.sourceName=C2MONALARM


###############################################################################
# c2mon-server-eslog
###############################################################################
c2mon.server.eslog.host=localhost
c2mon.server.eslog.port=9300
c2mon.server.eslog.cluster=c2mon
c2mon.server.eslog.node=c2mon-indexing-transport-node
c2mon.server.eslog.local=true
c2mon.server.eslog.home=/tmp/elasticsearch-node/
c2mon.server.eslog.config.index.replica=2
c2mon.server.eslog.config.index.shards=10
c2mon.server.eslog.config.index.format=M
c2mon.server.eslog.config.bulk.actions=5600
c2mon.server.eslog.config.bulk.size=5
c2mon.server.eslog.config.bulk.flush=10
c2mon.server.eslog.config.bulk.concurrent=1
c2mon.server.eslog.prefix.index=c2mon-tag_
c2mon.server.eslog.prefix.type=type_
c2mon.server.eslog.prefix.supervision=c2mon-supervision_
c2mon.server.eslog.prefix.alarm=c2mon-alarm_

