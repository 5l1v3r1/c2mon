<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

  <!-- the main Spring XML configuration file for starting up the C2MON client core context -->

  <context:component-scan base-package="cern.c2mon.client.core" />
  <context:annotation-config />

  <!-- The first definition enables basic property resolution through system properties (in fallback mode). The second bean loads the resource from the location
    resolved from the system property -Dc2mon.client.conf.url. All spring resource urls are supported, making this very flexible. For more information, please have a
    look at the following home page: http://springtips.blogspot.com/ -->
  <!--<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">-->
    <!--&lt;!&ndash;<property name="ignoreUnresolvablePlaceholders" value="true" />&ndash;&gt;-->
    <!--<property name="location">-->
      <!-- -->
    <!--</property>-->
  <!--</bean>-->
  <!--<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">-->
    <!--<property name="ignoreUnresolvablePlaceholders" value="true" />-->
    <!--<property name="ignoreResourceNotFound" value="true" />-->
    <!--<property name="locations">-->
      <!--<list>-->
        <!--<value>classpath:c2mon-client.properties</value>-->
        <!--<value>${c2mon.client.conf.url}</value>-->
      <!--</list>-->
    <!--</property>-->
    <!--<property name="properties">-->
      <!--<props>-->
        <!--&lt;!&ndash; server heartbeat &ndash;&gt;-->
        <!--<prop key="c2mon.client.jms.heartbeat.topic">c2mon.client.heartbeat</prop>-->
        <!--&lt;!&ndash; publication of server supervision events &ndash;&gt;-->
        <!--<prop key="c2mon.client.jms.supervision.topic">c2mon.client.supervision</prop>-->
        <!--&lt;!&ndash; publication of server alarm events &ndash;&gt;-->
        <!--<prop key="c2mon.client.jms.alarm.topic">c2mon.client.alarm</prop>-->
        <!--&lt;!&ndash; name of the JMS queue for client to server standard requests &ndash;&gt;-->
        <!--<prop key="c2mon.client.jms.request.queue">c2mon.client.request</prop>-->
        <!--&lt;!&ndash; name of the JMS queue for client to server admin requests &ndash;&gt;-->
        <!--<prop key="c2mon.client.jms.admin.queue">c2mon.client.admin</prop>-->
        <!--&lt;!&ndash; number of tags requested per JMS message &ndash;&gt;-->
        <!--<prop key="c2mon.client.request.size">500</prop>-->
        <!--&lt;!&ndash; max number of threads used to request tags from server &ndash;&gt;-->
        <!--<prop key="c2mon.client.request.threads.max">5</prop>-->
        <!--&lt;!&ndash; configuration request queue. TODO rename to c2mon.client.config.queue &ndash;&gt;-->
        <!--<prop key="jms.config.destination">c2mon.config</prop>-->
      <!--</props>-->
    <!--</property>-->
  <!--</bean>-->

  <!-- export beans to JMX -->
  <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
    <property name="assembler" ref="assembler" />
    <property name="autodetectModeName" value="AUTODETECT_ASSEMBLER" />
    <property name="namingStrategy" ref="namingStrategy" />
    <property name="registrationBehaviorName" value="REGISTRATION_REPLACE_EXISTING" />
  </bean>

  <bean id="assembler" class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
    <property name="attributeSource" ref="attributeSource" />
  </bean>

  <bean id="attributeSource" class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource" />

  <bean id="namingStrategy" class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
    <property name="attributeSource" ref="attributeSource" />
  </bean>

  <!-- import the XML configuration files for the Client API modules -->
  <import resource="classpath:cern/c2mon/client/jms/config/c2mon-client-jms.xml" />
  <!--<import resource="classpath:cern/c2mon/client/rbac/config/c2mon-client-rbac.xml" />-->

</beans>
