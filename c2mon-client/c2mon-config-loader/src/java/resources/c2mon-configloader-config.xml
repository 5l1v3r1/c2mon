<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- enable spring annotations scanning -->
	<context:component-scan base-package="cern.c2mon.configloader" />

	<context:mbean-export registration="ignoreExisting" />

	<tx:annotation-driven />

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<beans profile="AOP">
		<!-- enable AspecJ AOP -->
		<aop:aspectj-autoproxy />
	</beans>

	<!-- This is the production profile. C2mon configuration loader starts and connects to the production database. Production 
		configuration request is used -->
	<beans profile="PRO">

		<context:property-placeholder location="file:${c2mon-configloader.properties}"
			ignore-resource-not-found="true" ignore-unresolvable="true" />

		<import resource="classpath:resources/dbinf-prod-config.xml" />

		<bean id="reconfigurationRequestor" class="cern.c2mon.configloader.requestor.impl.ReconfigurationRequestorImpl" />

	</beans>


	<!-- In this profile c2mon configuration loader starts and connects to the embedded in-memory test database. It uses dummy 
		reconfiguration requestor -->
	<beans profile="TEST">

		<context:property-placeholder location="classpath:resources/test.properties"
			ignore-resource-not-found="true" ignore-unresolvable="true" />

		<import resource="classpath:resources/dbinf-test-config.xml" />

		<bean id="reconfigurationRequestor" class="cern.c2mon.configloader.requestor.impl.DummyReconfigurationRequestorImpl" />

	</beans>

</beans>